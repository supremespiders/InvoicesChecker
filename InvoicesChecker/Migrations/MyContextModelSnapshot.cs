// <auto-generated />
using System;
using InvoicesChecker.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoicesChecker.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InvoicesChecker.Models.FACTUUR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AFLEVERDATUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BTW_REGISTRATIE_NR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FACTUURDATUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FACTUURNUMMER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FACTUURREFERENTIENR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FACTUURREGELSId")
                        .HasColumnType("int");

                    b.Property<string>("FACTUURSOORT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_AFLEVERADRES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_ENVELOP_ZELF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_FACTUURADRES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_KOPERADRES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_LEVERANCIER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN_PARTNER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceFileId")
                        .HasColumnType("int");

                    b.Property<string>("ORDERNR_AFNEMER")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ORDER_DATUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAKBONNUMMER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Payed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("TESTINDICATOR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VALUTA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("FACTUURREGELSId");

                    b.HasIndex("InvoiceFileId");

                    b.HasIndex("ORDERNR_AFNEMER")
                        .IsUnique()
                        .HasFilter("[ORDERNR_AFNEMER] IS NOT NULL");

                    b.ToTable("FACTUUR");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUURREGEL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ARTIKELCODE_LEVERANCIER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ARTIKELOMSCHRIJVING")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BTWSOORT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EAN_ARTIKELCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FACTUURREGELSId")
                        .HasColumnType("int");

                    b.Property<string>("FACTUUR_AANTAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GELEVERD_AANTAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NETTOBEDRAG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PRIJS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PRIJSEENHEID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FACTUURREGELSId");

                    b.ToTable("FACTUURREGEL");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUURREGELS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("FACTUURREGELS");
                });

            modelBuilder.Entity("InvoicesChecker.Models.InvoiceFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawXml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InvoiceFiles");
                });

            modelBuilder.Entity("InvoicesChecker.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("InvoicesChecker.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FactuurId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Order")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactuurId")
                        .IsUnique()
                        .HasFilter("[FactuurId] IS NOT NULL");

                    b.HasIndex("Order")
                        .IsUnique()
                        .HasFilter("[Order] IS NOT NULL");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUUR", b =>
                {
                    b.HasOne("InvoicesChecker.Models.FACTUURREGELS", "FACTUURREGELS")
                        .WithMany()
                        .HasForeignKey("FACTUURREGELSId");

                    b.HasOne("InvoicesChecker.Models.InvoiceFile", "InvoiceFile")
                        .WithMany("FACTUUR")
                        .HasForeignKey("InvoiceFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FACTUURREGELS");

                    b.Navigation("InvoiceFile");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUURREGEL", b =>
                {
                    b.HasOne("InvoicesChecker.Models.FACTUURREGELS", null)
                        .WithMany("FACTUURREGEL")
                        .HasForeignKey("FACTUURREGELSId");
                });

            modelBuilder.Entity("InvoicesChecker.Models.Payment", b =>
                {
                    b.HasOne("InvoicesChecker.Models.FACTUUR", "Factuur")
                        .WithOne("Payment")
                        .HasForeignKey("InvoicesChecker.Models.Payment", "FactuurId");

                    b.Navigation("Factuur");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUUR", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("InvoicesChecker.Models.FACTUURREGELS", b =>
                {
                    b.Navigation("FACTUURREGEL");
                });

            modelBuilder.Entity("InvoicesChecker.Models.InvoiceFile", b =>
                {
                    b.Navigation("FACTUUR");
                });
#pragma warning restore 612, 618
        }
    }
}
